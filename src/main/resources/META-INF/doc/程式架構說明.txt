- 版本紀錄
	- 紀錄規則
		- src/main/resources/META-INF/doc/版本紀錄
		- [版本號]  [發布日期]  [開發者]  [版本名稱]  [版本描述]
		- 版本號遵照下方版本號規則
		- 發布日期格式為 yyyy/mm/dd
		- 版本名稱依照[專案序號]更新名稱，紀錄專案名稱
		- 版本描述依照[發布序號]更新名稱，記錄版本更新的主要項目
		- 紀錄內容依 修改概要 > 詳細敘述 做兩層式紀錄
		- 發布日期會影響權限使用時限，要確實記錄
		- 版本號更新時要同時刷新sec.txt
	- 版本號規則
		- [主框架序號].[專案序號].[發布序號].[功能序號].[快修序號][-dev]
		- 從0開始計算，快修序號若為0則省略
		- 主框架修改時+1
		- 專案序號每換一個大功能就+1
		- 發布序號為發表一次正式使用版本即+1
		- 功能序號為同一功能優化或除錯+1
		- 快修序號為極小幅度修改時的流水號，僅為確認程式執行時的最終版本，不需記錄修改內容
		- 若功能尚未開發完成，可押上-dev表示為測試版

- 程式架構
	- src/main	#主程式
		- java	#程式
			- etec
				- app.main	#主類別
				- common	#共用程式
					- model	#裝參數的物件
					- utils	#小工具  	強化到一定規模後要搬到framework
				- framwork	#自製小框架
					- 功能類型
						- 專案程式
				- src
					- 功能類型
						- common	#共用程式
						- project	#專案程式
						- view		#UI
		- resources/META-INF	#靜態資源
			- doc		#文件
			- sample	#模板
			- test		#測試資料
			+ application.yml	#設定檔  目前未使用
	- src/test	#測試，單元測試程式
		- main	#測試語法用的主類別
		- test	#單元測試
	- bin	#外部框架
	- config	#外部設定檔
	- doc	#文件
	+ sec.txt	#金鑰
	
#javadoc結構
	/**
	 * <h1>程式名稱</h1>
	 * 
	 * <p>
	 * <br>詳細敘述
	 * <br>詳細敘述
	 * </p>
	 * 
	 * <br>1999/01/01	更新者	更新敘述
 	 * <br>1999/01/01	更新者	更新敘述
 	 * 
	 * @author	開發者
	 * @since	初始版本
	 * @version 目前版本
	 * @param	參數敘述
	 * @param	參數敘述
	 * @return	回傳物件敘述
	 * @throws	例外敘述
	 * @throws	例外敘述
	 * @deprecated	廢棄及說明
	 * 
	 * */
	 
- 此文件的版本異動紀錄
	2024/10/01	Tim	整理程式架構及文件
	2024/02/17	Tim	修改版本號規則
	2024/01/21	Tim	制定程式架構,javadoc
	2023/09/14	Tim	制定版本號
	
	